# IMPORTANT: new packages must be added at the top of this file (after if
# package_enabled ...)

if package_enabled?('orogen')
    orogen_package 'simulation/orogen/imumodel'
    orogen_package 'planning/orogen/pddl_planner'
    orogen_package 'drivers/orogen/aria'
    orogen_package 'data_processing/orogen/type_to_vector'
    orogen_package 'control/orogen/motor_controller'
    orogen_package 'drivers/orogen/ptu_directedperception'

    in_flavor 'master' do
        not_on %w{ubuntu 10.04}, %w{ubuntu 10.10}, %w{ubuntu 11.04}, %w{ubuntu 11.10} do
            orogen_package 'image_processing/orogen/video_streamer'
        end
	orogen_package 'drivers/orogen/stim300'
	orogen_package 'drivers/orogen/imar'

    	orogen_package 'control/orogen/auv_rel_pos_controller'
    	orogen_package 'control/orogen/auv_control'
	orogen_package 'control/orogen/torque_estimator'
        orogen_package 'control/orogen/kdl'	

	orogen_package 'slam/orogen/terrain_estimator'
        orogen_package 'slam/orogen/eslam'

	orogen_package 'planning/orogen/simple_path_planner'

        orogen_package 'drivers/orogen/alt_imagenex'
        orogen_package 'drivers/orogen/ctd_seabird'
        orogen_package 'drivers/orogen/mbeam_imagenex'
        orogen_package 'drivers/orogen/pressure_paroscientific'
        orogen_package 'drivers/orogen/ucm_schilling'
        orogen_package 'drivers/orogen/act_schilling'
        orogen_package 'drivers/orogen/phins_ixsea'

        orogen_package 'drivers/orogen/kinect'
    end

    #################################################################################"
    #################################################################################"
    ## 
    ## Do not add anything below this line unless you know what you are doing
    ## New packages MUST be added at the top of the file, just after the "if
    ## package_enabled" line
    ##
    #################################################################################"
    #################################################################################"

    in_flavor 'master', 'next' do
    end
    
    in_flavor 'master', 'next', 'stable' do
        orogen_package 'control/orogen/trajectory_follower'
        orogen_package 'control/orogen/waypoint_navigation'
        orogen_package 'control/orogen/skid4_control'

        orogen_package 'drivers/orogen/canbus'
        orogen_package 'drivers/orogen/gps'
        orogen_package 'drivers/orogen/hokuyo'
        orogen_package 'drivers/orogen/xsens_imu'
        orogen_package 'drivers/orogen/dynamixel'
        orogen_package 'drivers/orogen/controldev'
        orogen_package 'drivers/orogen/parport'
        orogen_package 'drivers/orogen/wifimon'
        orogen_package 'drivers/orogen/camera_base'
        orogen_package 'drivers/orogen/camera_prosilica'
        orogen_package 'drivers/orogen/fog_kvh'
        orogen_package 'drivers/orogen/dvl_teledyne'
        orogen_package 'drivers/orogen/camera_usb'
        orogen_package 'drivers/orogen/iodrivers_base'
	orogen_package 'drivers/orogen/camera_firewire'
#	orogen_package 'drivers/orogen/gpsd_client' #same functionallity like gps, but planned to put gps funcionallity in this, and create generic gps command
    	orogen_package 'drivers/orogen/vicon'
    	orogen_package 'drivers/orogen/camera_v4l'
    	orogen_package 'drivers/orogen/sonar_tritech'
    	orogen_package 'drivers/orogen/laserscanner_sick'
    	orogen_package 'drivers/orogen/qualisys'
	orogen_package 'drivers/orogen/laser_filter'
    	orogen_package 'drivers/orogen/camera_ids'
    	if !has_ueye_api?
    	    Autoproj.manifest.add_exclusion "drivers/orogen/camera_ids", "the uEye Linux SDK needed for camera_ids is not installed!. Install it manually: http://www.ids-imaging.de/drivers.php"
    	end

        only_on 'debian' do
            orogen_package 'drivers/orogen/taskmon'
        end

	orogen_package 'slam/orogen/orientation_estimator'
	orogen_package 'slam/orogen/envire'
        orogen_package 'slam/orogen/graph_slam'
    	orogen_package 'slam/orogen/odometry'
    	orogen_package 'slam/orogen/tilt_scan'

        orogen_package 'image_processing/orogen/image_preprocessing'
        orogen_package 'image_processing/orogen/stereo'

	orogen_package 'planning/orogen/corridor_navigation'
        orogen_package 'planning/orogen/corridor_planner' do |pkg|
            pkg.remove_obsolete_installed_file "share", "typelib", "ruby", "corridor_planner.rb"
        end


        orogen_package 'drivers/orogen/aggregator' do |pkg|
            Autoproj.env_add_path 'OROGEN_PLUGIN_PATH', File.join(pkg.prefix, "share", "orogen", "plugins" )
        end
        orogen_package 'drivers/orogen/transformer' do |pkg|
            Autoproj.env_add_path 'OROGEN_PLUGIN_PATH', File.join(pkg.prefix, "share", "orogen", "plugins" )
        end
    end

else
    Autoproj.warn "the rock.toolchain package set is not enabled, skipping the oroGen packages!\n\t\
If you think oroGen should be enabled, then check your manifest: rock.toolchain package set \
has to be included before the rock package set"
end

create_metapackages
