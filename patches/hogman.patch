Index: EXTERNAL/csparse/CMakeLists.txt
===================================================================
--- EXTERNAL/csparse/CMakeLists.txt	(revision 0)
+++ EXTERNAL/csparse/CMakeLists.txt	(revision 0)
@@ -0,0 +1,56 @@
+add_library(csparse STATIC
+    cs_add.c
+    cs_amd.c
+    cs_chol.c
+    cs_cholsol.c
+    cs_compress.c
+    cs_counts.c
+    cs_cumsum.c
+    cs_dfs.c
+    cs_dmperm.c
+    cs_droptol.c
+    cs_dropzeros.c
+    cs_dupl.c
+    cs_entry.c
+    cs_ereach.c
+    cs_etree.c
+    cs_fkeep.c
+    cs_gaxpy.c
+    cs.h
+    cs_happly.c
+    cs_house.c
+    cs_ipvec.c
+    cs_leaf.c
+    cs_load.c
+    cs_lsolve.c
+    cs_ltsolve.c
+    cs_lu.c
+    cs_lusol.c
+    cs_malloc.c
+    cs_maxtrans.c
+    cs_multiply.c
+    cs_norm.c
+    cs_permute.c
+    cs_pinv.c
+    cs_post.c
+    cs_print.c
+    cs_pvec.c
+    cs_qr.c
+    cs_qrsol.c
+    cs_randperm.c
+    cs_reach.c
+    cs_scatter.c
+    cs_scc.c
+    cs_schol.c
+    cs_spsolve.c
+    cs_sqr.c
+    cs_symperm.c
+    cs_tdfs.c
+    cs_transpose.c
+    cs_updown.c
+    cs_usolve.c
+    cs_util.c
+    cs_utsolve.c
+    )
+set_target_properties(csparse PROPERTIES COMPILE_FLAGS -fPIC)
+
Index: aislib/hogman.pc.in
===================================================================
--- aislib/hogman.pc.in	(revision 0)
+++ aislib/hogman.pc.in	(revision 0)
@@ -0,0 +1,12 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=@CMAKE_INSTALL_PREFIX@
+libdir=${prefix}/lib
+includedir=${prefix}/include
+
+Name: @TARGET_NAME@
+Description: @PROJECT_DESCRIPTION@
+Version: @PROJECT_VERSION@
+Requires: @DEPS_PKGCONFIG@
+Libs: -L${libdir} -l@TARGET_NAME@
+Cflags: -I${includedir}/hogman -I${includedir}/hogman/aislib
+
Index: aislib/CMakeLists.txt
===================================================================
--- aislib/CMakeLists.txt	(revision 0)
+++ aislib/CMakeLists.txt	(revision 0)
@@ -0,0 +1,81 @@
+set(HOGMAN_INSTALL include/hogman/aislib)
+
+rock_library(hogman
+    graph/dijkstra.cpp
+    graph/graph.cpp
+    graph/loadEdges3d.cpp
+    graph_optimizer/graph_optimizer2d_aux.cpp
+    graph_optimizer_hogman/csparse_helper.cpp
+    graph/posegraph2d.cpp
+    graph/posegraph3d.cpp
+    stuff/filesys_tools.cpp
+    stuff/runtime_error.cpp
+    stuff/string_tools.cpp
+    DEPS csparse
+)
+
+install(FILES 
+    graph/dijkstra.h
+    graph/graph.h
+    graph/loadEdges3d.h
+    graph/posegraph2d.h
+    graph/posegraph3d_gradient.h
+    graph/posegraph3d.h
+    graph/posegraph.h
+    graph/posegraph.hpp
+    DESTINATION ${HOGMAN_INSTALL}/graph)
+
+install(FILES 
+    graph_optimizer/graph_optimizer2d_aux.h
+    graph_optimizer/graph_optimizer2d.h
+    graph_optimizer/graph_optimizer3d.h
+    graph_optimizer/graph_optimizer.h
+    graph_optimizer_hogman/csparse_helper.h
+    graph_optimizer_hogman/graph_optimizer2d_chol.h
+    graph_optimizer_hogman/graph_optimizer2d_hchol.h
+    graph_optimizer_hogman/graph_optimizer3d_chol.h
+    graph_optimizer_hogman/graph_optimizer3d_hchol.h
+    graph_optimizer_hogman/graph_optimizer_chol.h
+    graph_optimizer_hogman/graph_optimizer_hchol.h
+    graph_optimizer/graph_optimizer.hpp
+    graph_optimizer_hogman/graph_optimizer_chol.hpp
+    graph_optimizer_hogman/graph_optimizer_hchol_aux.hpp
+    graph_optimizer_hogman/graph_optimizer_hchol_batch.hpp
+    graph_optimizer_hogman/graph_optimizer_hchol.hpp
+    graph_optimizer_hogman/graph_optimizer_hchol_incremental.hpp
+    DESTINATION ${HOGMAN_INSTALL}/graph_optimizer)
+
+install(FILES 
+    math/angle.h
+    math/axis_angle.h
+    math/matrix_n.h
+    math/quaternion.h
+    math/rotation_matrix.h
+    math/transformation.h
+    math/vector_n.h
+    math/axis_angle.hpp
+    math/matrix_n.hpp
+    math/quaternion.hpp
+    math/rotation_matrix.hpp
+    math/vector_n.hpp
+    DESTINATION ${HOGMAN_INSTALL}/math)
+
+install(FILES 
+    stuff/array_allocator.h
+    stuff/color_macros.h
+    stuff/filesys_tools.h
+    stuff/macros.h
+    stuff/os_specific.h
+    stuff/runtime_error.h
+    stuff/string_tools.h
+    DESTINATION ${HOGMAN_INSTALL}/stuff)
+
+rock_executable(hogman2d
+    graph_optimizer_hogman/hogman2d.cpp
+    DEPS hogman 
+)
+
+rock_executable(hogman3d
+    graph_optimizer_hogman/hogman3d.cpp
+    DEPS hogman 
+)
Index: manifest.xml
===================================================================
--- manifest.xml	(revision 0)
+++ manifest.xml	(revision 0)
@@ -0,0 +1,16 @@
+<package>
+    <description brief="HOG-Man - Hierarchical Optimization for Pose Graphs on Manifolds">
+	HOG-Man is an optimization approach for graph-based SLAM. It provides a
+	highly efficient error minimization procedure that considers the the
+	underlying space is a manifold and not a Euclidian space. It
+	furthermore generates a hierarchy of pose-graphs which is used perform
+	the operations during online mapping in a highly efficient way. The
+	approach works in 2D and 3D.
+    </description>
+    <author>Giorgio Grisetti; Rainer Kuemmerle; Cyrill Stachniss;</author>
+    <copyright>
+	Copyright and V.i.S.d.P.: Giorgio Grisetti; Rainer Kuemmerle; Cyrill Stachniss;
+    </copyright>
+    <license>LGPL v.3</license>
+    <url>http://www.openslam.org/hog-man.html</url>
+</package>
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 0)
+++ CMakeLists.txt	(revision 0)
@@ -0,0 +1,9 @@
+cmake_minimum_required(VERSION 2.6)
+include($ENV{ROCK_CMAKE_MACROS}/Rock.cmake)
+
+rock_init(hogman 1.0)
+
+include_directories(. aislib EXTERNAL)
+add_subdirectory(EXTERNAL/csparse)
+add_subdirectory(aislib)
+
